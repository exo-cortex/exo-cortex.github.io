<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>How-tos on exo-cortex: weblog</title><link>https://exo-cortex.github.io/how-to/</link><description>Recent content in How-tos on exo-cortex: weblog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 30 Oct 2021 12:09:13 +0200</lastBuildDate><atom:link href="https://exo-cortex.github.io/how-to/index.xml" rel="self" type="application/rss+xml"/><item><title>sed_basics</title><link>https://exo-cortex.github.io/how-to/sed_basics/</link><pubDate>Sat, 30 Oct 2021 12:09:13 +0200</pubDate><guid>https://exo-cortex.github.io/how-to/sed_basics/</guid><description>what is sed? sed is a &amp;ldquo;stream editor&amp;rdquo; usable from the commandline. It can do a lot of things and I wrote down some basics examples here (so I don&amp;rsquo;t have to google them repeatedly). A great and very thorough guide can be found elsewhere [0]. I only post the most useful examples that I needed so far.
sed typically works by reading an input string, looks for patterns and does something with these patterns.</description></item><item><title>hifiberry_and_mpd_on_raspberry_pi</title><link>https://exo-cortex.github.io/how-to/mpd_on_raspberry_pi/</link><pubDate>Sat, 16 Oct 2021 14:45:23 +0200</pubDate><guid>https://exo-cortex.github.io/how-to/mpd_on_raspberry_pi/</guid><description>I set up my Raspberry Pi 4 with Arch Linux [0]. Having totally forgotten how to make it work with the Hifiberry DAC+ XLR audio shield I had to google, read and understand everything again. In order to avoid this hassle and not waste so much fucking time again (and hopefully help some lost souls on the internet in the process) I&amp;rsquo;m writing everything down here.
enabling the audio-shield For the DAC2-Pro XLR in the &amp;ldquo;/boot/config.</description></item><item><title>easy image manipulation using imagemagick</title><link>https://exo-cortex.github.io/how-to/imagemagick/</link><pubDate>Wed, 02 Jun 2021 16:20:26 +0200</pubDate><guid>https://exo-cortex.github.io/how-to/imagemagick/</guid><description>I often use Imagemagick for simple image-manipulation from the commandline. The the program is invoked via the &amp;ldquo;convert&amp;rdquo;-command.
Here is a list of useful commands for simple image manipulation like resizing, cropping or conversion from one format to another. This list exists , because I realized that I had to re-google some commands everytime I was using them.
conversion between formats $ convert input_image.png -quality 90 output_image.jpg # or set output format through &amp;#34;-format&amp;#34;-option $ convert input_image.</description></item><item><title>ffmpeg_scripts</title><link>https://exo-cortex.github.io/how-to/ffmpeg_scripts/</link><pubDate>Sun, 30 May 2021 20:09:19 +0200</pubDate><guid>https://exo-cortex.github.io/how-to/ffmpeg_scripts/</guid><description>How to use ffmpeg. I use ffmpeg to convert videos from one format to the other. In order to create small video files from gifs I use this script:
#!/usr/bin/sh # two-pass video-conversion with resizing to width echo &amp;#34;$1&amp;gt;&amp;gt; $2resizing to width=$3with target video-bitrate of $4&amp;#34; ffmpeg -y -i &amp;#34;$1&amp;#34; -vf scale=$3:-1 -c:v vp9 -preset quality -b:v $4 -pass 1 -an -auto-alt-ref 0 -f webm /dev/null &amp;amp;&amp;amp; \ ffmpeg -i &amp;#34;$1&amp;#34; -vf scale=$3:-1 -c:v vp9 -preset quality -b:v $4 -pass 2 -an -auto-alt-ref 0 $2 explanation -an (no audio) -vf (video filtering -&amp;gt; see below) -c:v (video codec options - e.</description></item><item><title>github first use</title><link>https://exo-cortex.github.io/how-to/github-first-use/</link><pubDate>Fri, 28 May 2021 21:52:50 +0200</pubDate><guid>https://exo-cortex.github.io/how-to/github-first-use/</guid><description>This section shall contain short explanations about git and/or github in my own words. The official man page is often a little dense in information- at least for me.
How to initialize git repository, add files, commit changes and push to existing github repository:
echo &amp;#34;# exo-cortex.github.io&amp;#34; &amp;gt;&amp;gt; README.md git init git add README.md git commit -m &amp;#34;first commit&amp;#34; git branch -M main git remote add origin git@github.com:exo-cortex/exo-cortex.github.io.git git push -u origin main</description></item></channel></rss>